<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[yelee主题改bug总结]]></title>
      <url>https://alexzhong22c.github.io/2017/02/22/my-hexo-theme/</url>
      <content type="html"><![CDATA[<p>从找一个喜欢的hexo主题到修改好bug发布到博客上面，整个过程花了我不少时间，下面是对这个改bug过程中发现的小问题做的总结。</p>
<p>此文无图。</p>
<hr>
<p>一开始我是在知乎上面找好看的主题，找了很长一段时间才找到一个我比较喜欢的主题，并且挑选了一个已经被大神们优化得不错的主题来借鉴借鉴。</p>
<p>我的hexo主题其实就是直接Fork了<a href="http://ngudream.com/2017/01/24/n-hexo-blog/" target="_blank" rel="external">ngudream</a>的主题，只不过该大神日常比较忙碌，我自己琢磨了一下代码，把一些报错的小bug给修复了，暂时还没有为这个主题添加什么特殊的功能。（原因是这个主题在各位大神的努力下，功能已经非常齐全炫酷了。）</p>
<p>直接参考ngudream的这篇文章就可以了，在此在此表示一万个感谢：</p>
<p><a href="http://ngudream.com/2017/01/24/n-hexo-blog/" target="_blank" rel="external">http://ngudream.com/2017/01/24/n-hexo-blog/</a></p>
<p>在这个过程中我发现了一些小问题：</p>
<h2 id="左右搜索栏"><a class="header-anchor" href="#左右搜索栏"></a>左右搜索栏</h2>
<p>一定要先根据这个来安装插件：</p>
<p><a href="http://gaomf.cn/2016/10/10/%E4%B8%BAHexo%E5%8D%9A%E5%AE%A2Yilia%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%9C%AC%E5%9C%B0%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/" target="_blank" rel="external">Yilia主题添加本地站内搜索-高明飞</a></p>
<h3 id="找不到content-json"><a class="header-anchor" href="#找不到content-json"></a>找不到content.json</h3>
<ul>
<li>这是因为左下角搜索栏找不到content.json</li>
</ul>
<ul>
<li>将<code>yelee\source</code>文件夹下的search文件夹剪切到 根目录的source文件夹里面</li>
<li>生成一次页面</li>
<li>再把刚刚的search文件夹剪切回<code>yelee\source</code>文件夹下即可</li>
</ul>
<hr>
<h3 id="cb-search-json-404-not-found"><a class="header-anchor" href="#cb-search-json-404-not-found"></a>cb-search.json 404 (Not Found)</h3>
<ul>
<li>是因为没有安装右下角搜索栏插件</li>
</ul>
<ul>
<li>如果安装插件之后语法报错，就把别人项目的文件代码复制过来就行了，省得去检查语法</li>
</ul>
<hr>
<h3 id="百度分享因为混合内容报错"><a class="header-anchor" href="#百度分享因为混合内容报错"></a>百度分享因为混合内容报错</h3>
<p>如果因为混合内容报错（即https网站引用了http的资源），你可以将百度分享的地址改为：<code>https://github.com/hrwhisper/baiduShare</code>；本来我想把static文件夹放在外面一点的，但是有bug，我现在只是做到不报错而已，具体的百度分享内容都没弄</p>
<hr>
<h3 id="百度站长要重新配置"><a class="header-anchor" href="#百度站长要重新配置"></a>百度站长要重新配置</h3>
<ul>
<li>查阅相关资料，依照资料放baidu_verify_QshFoK3ZRz.html在yelee的source文件夹下通过站长验证，放googleeff62ed1566e185e.html也是同理。</li>
</ul>
<p>百度sitemap要另外安装：</p>
<pre><code>npm install hexo-generator-baidu-sitemap --save 
</code></pre>
<ul>
<li>如果想要给谷歌提交网站，只需要在<a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="external">Search Console</a>验证网站，并提交站点地图就可以了。谷歌真的好简单啊！谷歌的<code>sitemap.xml</code>不需要写到配置文件中，自动生效。
<ul>
<li>有个问题是，Github禁止百度爬虫，所以提交的sitemap迟早会显示失败，成功几率非常小</li>
</ul>
</li>
</ul>
<hr>
<h2 id="温馨提示"><a class="header-anchor" href="#温馨提示"></a>温馨提示</h2>
<ul>
<li>多说也是会因为混合内容而报错，但是我只能改良，不能彻底解决这个问题
<ul>
<li>将多说的<code>embed.js</code>本地化，	将这个文件的地址改动到<code>duoshuo.ejs</code>和<code>click2show.ejs</code>和layout的<code>after-footer.ejs</code>文件里面，但是依然报错</li>
<li>见到http就给它加s</li>
</ul>
</li>
<li>在Markdown文章头部的标注信息的冒号后面要加一个空格，这是语法要求</li>
</ul>
<ul>
<li>在hexo s调试下，百度站长push报错属于正常现象</li>
<li>在hexo s调试下，文章导航的特效会失灵，属于正常现象</li>
</ul>
<ul>
<li>发现大神每篇文章文件的名字都是英文，Markdown里面的标题才是中英随意的，不然isPost()函数会出错
<ul>
<li>用cmd创文件名的时候英文全小写，空格用-表示，为了风格统一</li>
</ul>
</li>
<li>插件这种东西最好不要复制，所以<strong>在重新搭建博客的时候</strong>我没有直接复制node_modules文件夹，这也容易令人忽略了大神自己在这个文件夹下改良的index.js和search.ejs文件</li>
</ul>
<hr>
<h2 id="请不要fork我的主题"><a class="header-anchor" href="#请不要fork我的主题"></a>请不要Fork我的主题</h2>
<p>去Fork大神ngudream的主题就可以了，因为我的个人改动比较私人化，所以Fork之后别人可能会看不懂。另外我的主题作了几个不好的改动：</p>
<ul>
<li>为了避免报错，一开始我把一些if语句的判断条件直接改为false，原本它们的判断条件是xxx.on的</li>
</ul>
<ul>
<li>还有一个feed属性没研究，应该是订阅博客的功能，好像也被我粗暴地关了</li>
<li>报错<code>Cannot GET /plugins/css/special.css</code>，我直接把“字往下掉”动画关掉</li>
<li>然后就是折腾在显示主页时标签栏出现的undefined，一开始我不知道那个把三项文字的标签转为二项的js文件，所以一直研究ejs代码都没弄好。后来我直接给主页加一个英文名字blog就算了。总算不出现undefined</li>
<li>乱关乱开了一下博文最下方的分享栏，不知道会不会出问题，这个模块应该是百度分享</li>
<li>点击微信之后，那个左右滑动的栏目我暂时改不了代码，本来我想去掉qq的，但是只好把qq的二维码弄上
<ul>
<li>还有就是去掉qq之后，点击微信，上面那个圆形地方就没有图案显示</li>
</ul>
</li>
<li>发现search-result-list模块的文字被顶到后面
<ul>
<li>把.col-3的CSS的marginbottom改为4px就行了</li>
</ul>
</li>
</ul>
<h3 id="我没有完善的内容"><a class="header-anchor" href="#我没有完善的内容"></a>我没有完善的内容</h3>
<ul>
<li>代码压缩没搞</li>
<li>公益404没搞</li>
<li>右下角搜索栏搞了，但是利用的不是打分排名</li>
<li>谷歌分析到现在也不会，所以先不用，应该和百度站长是差不多的，没心思搞</li>
<li>好像就只有360浏览器看不到emoji表情，所以即便安装了插件，文章尽量不要用emoji</li>
</ul>
<hr>
<h2 id="整个过程的心得"><a class="header-anchor" href="#整个过程的心得"></a>整个过程的心得</h2>
<ul>
<li>在这过程中学会了用HTML-beautify来美化sublime中的html代码排版</li>
<li>对ejs的代码写法有所了解</li>
<li>明白了代码中的partial是干嘛的</li>
<li>第一次发现一些私人的代码改动都是写在<code>after-footer.ejs</code>里面</li>
<li>发现dos的报错信息还是有点用的</li>
<li>令我困惑的是填yml文件中的url项，后来发现用来填绑定的域名，域名要自己出钱买</li>
<li>一开始遇到<code>Cannot read property 'on' of undefined</code>不会调，后来发现是yml文件填得不好，可能是不符合语法，导致错误。再比如yml文件中代码没有在适当的地方空空格。</li>
<li>如果在网上打开js文件发现中文变乱码，在谷歌浏览器打开查看就可以了，这是最不消耗脑力的办法</li>
</ul>
]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> yelee </tag>
            
            <tag> theme </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[搭建hexo博客个人总结]]></title>
      <url>https://alexzhong22c.github.io/2017/02/22/my-hexo-blog/</url>
      <content type="html"><![CDATA[<p>因为大神们在这个方面的文献已经很多了，所以我觉得我没有必要再写一个教程了。关于教程，可以推荐<a href="http://blog.csdn.net/itjia_0203/article/details/52504837" target="_blank" rel="external">sylujia的hexo搭建教程</a>来看看，写得很详细而且思路也很好，但是我记得这个教程有一两点步骤不太妥当，如果完全按照教程来搞会报错，但如果自身有一点基本知识的话，这点问题真的算不上是问题。</p>
<hr>
<p>我是按照<a href="http://blog.csdn.net/itjia_0203/article/details/52504837" target="_blank" rel="external">sylujia的hexo搭建教程</a>来搭建的，发现这个教程有几个不周全的地方。</p>
<h2 id="这个教程的不周全之处"><a class="header-anchor" href="#这个教程的不周全之处"></a>这个教程的不周全之处</h2>
<h3 id="不周之处一"><a class="header-anchor" href="#不周之处一"></a>不周之处一</h3>
<p>没有直接介绍如何在github仓库创建hexo分支，这个部分可以参考这段代码：</p>
<pre><code>1.  在github上创建仓库，仓库名为your-user-name.github.io
2.  本地创建两个分支：master 与 hexo：
先让gitbash去到your-user-name.github.io文件夹，再输入以下命令
    touch README.md
    git init
    git add README.md
    git commit -m &quot;first commit&quot;
    git remote add origin https://github.com/your-user-name/your-user-name.github.io.git
    git push -u origin master

    在本地新建一个分支： 
        git branch hexo
    切换到你的新分支: 
        git checkout hexo
    将新分支发布在github上： 
        git push origin hexo
    至此分支创建完毕
3.  在github网站上的仓库设置hexo为默认分支
</code></pre>
<p>对于这段代码的解释可以参考原文<a href="http://www.cnblogs.com/ld1024/p/5913169.html" target="_blank" rel="external">冷星1024的hexo搭建教程</a> 。这一步应该在git与github建立联系之后，在安装hexo之前完成。</p>
<hr>
<h3 id="不周之处二"><a class="header-anchor" href="#不周之处二"></a>不周之处二</h3>
<p>看到这一步：</p>
<p>在项目文件夹下执行以下命令：</p>
<pre><code>$ git init #初始化为一个git目录
$ git remote add origin git@github.com:sylujia/sylujia.github.io.git #使用你自己的地址关联
$ git pull #pull一下你的远端库
</code></pre>
<p>执行之后命令行的位置应该是<strong>不在</strong>hexo分支下的，如果按照教程继续执行<code>$ git checkout hexo</code>应该会面临失败，而用<code>git clean -d -fx &quot;&quot;</code>来解决问题会删掉本地的文件这也是万万不可的。</p>
<p>比较合适的一个做法应该是改进它的下一步为：</p>
<pre><code>$ git add . #添加所有文件到暂存区
$ git commit -m &quot;提交信息&quot;     #提交到本地仓库
$ git push -f origin hexo  #把本地库强制push到远端库的hexo分支
</code></pre>
<p>接着往下做就行了，一直到教程的<strong>优化与部署</strong>环节。不建议小白看<strong>优化与部署</strong>及之后的内容，只不过是把之前的内容重新过一遍而已，最后那段内容甚至可能涉及抄袭，有点敷衍，不看就行了。</p>
<hr>
<h2 id="原始文件和部署文件分离"><a class="header-anchor" href="#原始文件和部署文件分离"></a>原始文件和部署文件分离</h2>
<p>选用这个教程的好处就是为了在搭建之后能很方便地备份和还原博客。其原理就是将原始文件和部署文件分离上传到仓库。这是这个教程没有明确说明的一个点。</p>
<p>在搭建好hexo博客之后，应该要按照以下过程管理博客：</p>
<h3 id="日常修改"><a class="header-anchor" href="#日常修改"></a>日常修改</h3>
<p>在本地对博客进行修改(添加新博文、修改样式等等)后，</p>
<p>1. 先执行hexo clean(这是为了减少上传的原始文件的大小，也可以忽略这步，那么速度也会快一点点)</p>
<p>2.依次执行</p>
<pre><code>git add .
git commit -m &quot;...&quot;
git push origin hexo
</code></pre>
<p>指令将改动 推送到github(此时当前分支应为hexo)</p>
<p>3. 执行<code>hexo g -d</code>发布网站到master分支上。</p>
<hr>
<h3 id="如果本地资料丢失-之前所做的备份就能实现还原"><a class="header-anchor" href="#如果本地资料丢失-之前所做的备份就能实现还原"></a>如果本地资料丢失，之前所做的备份就能实现还原</h3>
<p>重装电脑或者想在其他电脑上修改博客，可以使用下列步骤：</p>
<pre><code>使用
git clone git@github.com:sylujia/sylujia.github.io.git
拷贝仓库（默认分支为hexo）
在本地新拷贝的sylujia.github.io文件夹下通过Git bash依次执行下列指令：
npm install hexo、npm install、npm install hexo-deployer-git
（注意：不需要hexo init这条指令）
</code></pre>
<hr>
<h2 id="理解过程和解决bug可能会用到的知识点"><a class="header-anchor" href="#理解过程和解决bug可能会用到的知识点"></a>理解过程和解决bug可能会用到的知识点</h2>
<h3 id="git与github区别"><a class="header-anchor" href="#git与github区别"></a>Git与GitHub区别</h3>
<p>理解Git与GitHub是两个不同的概念，这有利于理解搭建hexo博客的过程，万一报错了自己也能解决。</p>
<p>git是一个<a href="http://lib.csdn.net/base/git" target="_blank" rel="external">版本控制</a>的工具，而github有点类似于远程仓库，用于存放用git管理的各种项目。自行进一步理解git能够对搭建hexo博客的过程有理性的认识。</p>
<hr>
<h3 id="gitignore文件"><a class="header-anchor" href="#gitignore文件"></a>.gitignore文件</h3>
<p>.gitignore顾名思义就是告诉git需要忽略的文件，这是一个很重要并且很实用的文件。</p>
<p>一般我们写完代码后会执行编译、调试等操作，这期间会产生很多中间文件和可执行文件，这些都不是代码文件，是不需要git来管理的。</p>
<p>我们在git status的时候会看到很多这样的文件，如果用git add -A来添加的话会把他们都加进去，而手动一个个添加的话也太麻烦了。</p>
<p>这时我们就需要.gitignore了。</p>
<hr>
<h3 id="强制push"><a class="header-anchor" href="#强制push"></a>强制push</h3>
<p>如果<code>git push origin master</code>不行的话，是因为<strong>检测到远程的仓库和你本地仓库里面的文件各不相同</strong>所以不允许commit。</p>
<p>这时候你可以选择使用<code>git push -f origin master</code>强制地push，硬将你的内容推到github仓库上。</p>
<hr>
<h3 id="遇到不能切换分支问题"><a class="header-anchor" href="#遇到不能切换分支问题"></a>遇到不能切换分支问题</h3>
<p>在本地切换分支的命令是<code>git checkout hexo</code></p>
<p>如果报错说不能换分支，</p>
<p>使用<code>git clean -d -fx &quot;&quot;</code>把以前的git记录清除掉就行了，</p>
<p>但是这也会删掉本地的文件，不要乱用。</p>
<hr>
<h2 id="hexo搭建过程咨询服务"><a class="header-anchor" href="#hexo搭建过程咨询服务"></a>hexo搭建过程咨询服务</h2>
<p>以上文章内容已经提供了充足的资源来供一个小白自学如何搭建并且有能力自助解决搭建过程中出现的问题。但是我相信如果不亲自折腾一下hexo的话，是不会了解到其中的一些基本的原理，是不可能理解上述内容的，所以搭建过程是相当困难的。</p>
<p>如果按照一个比较完整的教程，<strong>10小时</strong>学会搭建一个hexo博客不是难事。</p>
<p>但是如果不懂得任何原理，按照教程来搭建，万一遇到报错或者问题会消耗大量的时间，我就是一个例子，经历了搭建好了一个hexo博客–换主题–修改主题的一些bug–重新搭建一个结构良好的hexo博客，我花了将近<strong>两个星期</strong>的时间。</p>
<p>在这两个星期的时间里面，因为遇到了一些有问题的教程，本来想请教大神，但总遭到大神们以忙为理由委婉拒绝，我只好花了大量时间来试错和研究和理解整个流程和原理。</p>
<p>可见，<strong>选对教程</strong>、<strong>理解原理</strong>能大大减少自我摸索过程中的痛苦。</p>
<hr>
<p>一次偶然的机会，我收取了一个网友50元，在他整个搭建过程中向他提供问题咨询，包学包会。结果发现他在整个过程中能免除很多痛苦，而且节省了他大量的时间。两个星期的问题能够在三四天时间内轻松解决，其实这50元还真的挺值。</p>
<p>后来我陆续接了几单咨询来做，通过这个互利的过程，我对咨询和解决方案行业的态度发生的巨大的改观。我个人也欢迎联系付费咨询的合作！</p>
<h2 id="本文补充"><a class="header-anchor" href="#本文补充"></a>本文补充</h2>
<p>之前讲到的几个博文链接地址我都已经放上了，另外还有一篇原创的不错的文章，地址挂了，我把全文截图放在这里，可以右键另存为来看：</p>
<p><img src="http://olqa2s510.bkt.clouddn.com/CrazyMilk-%20blog.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 心得 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
